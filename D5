# -*- coding: utf-8 -*-
"""
Created on Thu Sep  5 17:12:32 2019

@author: 薛
"""

import os
dirpath = '.'
def numOFFile(path,num=1):
    try:
        if os.path.isdir(path):
            num+=1
            for x in os.listdir(path):
                num+=1
    except BaseException:
        pass
    finally:
        return num
    
#%%


import os,time,random
from multiprocessing import Process,Pool
def run_Proc(name):
    print('Run child process %s (%s)...'  % (name , os.getpid()))
      
      
if __name__=='__main__':
    print('Parent process %s.' % os.getpid())
    p= Process(target=run_Proc,args=('test',))
    print('Child process will start.')
    p.start()
    p.join()
    print('Child process end')
#%%
import subprocess

print('$ nslookup www.python.org')
r = subprocess.call(['nslookup', 'www.python.org'])
print('Exit code',r)

#%%
import subprocess
print('$ nslookup')
p = subprocess.Popen(['nslookup'],stdin=subprocess.PIPE,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
output,err = p.communicate(b's et q=mx\npython.org\next\n')
print(output.decode('utf-8'))
print('Exit code:',p.returncode)
#%%
import subprocess

print('$ nslookup')
p = subprocess.Popen(['nslookup'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
output, err = p.communicate(b'set q=mx\npython.org\nexit\n')
print(output.decode('utf-8'))
print('Exit code:', p.returncode)

#%%

balance=0
import time,threading
def change_it(n):
    global balance 
    balance= balance + n
    balance= balance - n
    
def run_thread(n):
    for i in range(100000):
        change_it(n)
        
t1=threading.Thread(target=run_thread,args=(5,))
t2=threading.Thread(target=run_thread,args=(8,))
t1.start()
t2.start()
t1.join()
t2.join()
print(balance)



lock=threading.Lock()

def run_thread(n):
    for i in range(100000):
        lock.acquire
        try:
            change_it(n)
        finally:
            lock.release()
            
#%%
import threading
local_school=threading.local()

def process_student():
    std=local_school.student
    print('Hello, %s (in %s)'%(std,threading.current_thread().name))
    
    
def process_thread(name):
    local_school.student=name
    process_student()
    
    
t1=threading.Thread(target=process_thread,args=('Alice',),name='Thread-A')
t2=threading.Thread(target=process_thread,args=('Bob'),name='Thread-B')
t1.start()
t2.start()
t1.join()
t2.join()

#%%
# -*- coding: utf-8 -*-
import re
def is_valid_email(addr):
    r=r'^\w*\.?\w*\@\w*\.\w*$'
    
    return re.match(r,addr)
# 测试:
assert is_valid_email('someone@gmail.com')
assert is_valid_email('bill.gates@microsoft.com')
assert not is_valid_email('bob#example.com')
assert not is_valid_email('mr-bob@example.com')
print('ok')


#%%
# -*- coding: utf-8 -*-
import re


def name_of_email(addr):
    r='(.*?)([\w\s]*)(.*?)'
    return re.match(r,addr).group(2)



# 测试:
assert name_of_email('<Tom Paris> tom@voyager.org') == 'Tom Paris'
assert name_of_email('tom@voyager.org') == 'tom'
print('ok')


